{"version":3,"sources":["components/Header.jsx","modules/todoItems.js","modules/modal.js","components/Button.jsx","components/TodoItemModal.jsx","containers/ModalContainer.jsx","components/TodoItem.jsx","components/TodoItemList.jsx","classes/TodoItem.js","containers/TodoListContainer.jsx","App.js","serviceWorker.js","modules/index.js","index.js","styles/modal.module.scss","styles/button.module.scss","styles/todoItem.module.scss","styles/layout.module.scss"],"names":["Header","_ref","children","rest","Object","objectWithoutProperties","react_default","a","createElement","className","create","createAction","update","remove","toggle","reload","loadData","initialSate","List","handleActions","_handleActions","defineProperty","state","action","map","item","set","get","unshift","payload","findIndex","todoItem","mergeIn","delete","setIn","getIn","fromJS","setModal","setMode","Map","modal","mode","modal_handleActions","key","value","cx","classNames","bind","styles","Submit","_ref2","type","onClick","autoComplete","FloatingButton","_ref3","HideButton","_ref4","Button","TodoItemModal","onSubmit","e","_this","props","preventDefault","onChange","default","_e$target","target","name","endDate","selectedDay","modifiers","dayPickerInput","date","toISOString","slice","getInput","this","_this$props","onHide","components_Button","index_esm","placeholder","defaultValue","required","DayPickerInput_default","dayPickerProps","disabledDays","before","Date","inputProps","readOnly","onDayChange","Button_Submit","Component","ModalContainer","handleSubmit","TodoItemsActions","handleHide","change","_this$props2","id","TodoItemModalActions","handleChange","_this$props3","components_TodoItemModal","connect","dispatch","bindActionCreators","todoItemsActions","todoItemModalActions","TodoItem","removeMessage","toastManager","addMessage","message","concat","add","appearance","autoDismiss","pauseOnHover","onRemove","handleCheck","onToggle","nextProps","nextState","JSON","stringify","toJS","prevProps","prevTodoItem","defaultChecked","htmlFor","fi_index_esm","complete","Button_HideButton","TodoItemList","todoItems","onDragEnd","itemList","react_beautiful_dnd_esm","draggableId","index","provided","snapshot","assign","ref","innerRef","draggableProps","dragHandleProps","components_TodoItem","droppableId","droppableProps","withToastManager","defaultTodoItem","title","contents","priority","isComplete","arguments","length","undefined","classCallCheck","toImmutable","result","_i","_Object$keys","keys","fromImmutable","isImmutable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","_i2","_Object$keys2","shortid","generate","TodoListContainer","onCreate","size","destination","source","deletedList","idx","insert","prevState","localStorage","setItem","dist","components_TodoItemList","Button_FloatingButton","App","getItem","parse","components_Header","containers_TodoListContainer","containers_ModalContainer","Boolean","window","location","hostname","match","combineReducers","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","wrapper","box","header","notice","right","close","submit","floating","circle","hide-right","check","root","content","vl"],"mappings":"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","file":"static/js/main.d3f5c6f4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({ children, ...rest }) => {\r\n  return (\r\n    <div className={rest.className}>\r\n      <span>{children}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { List, fromJS } from 'immutable';\r\nimport { createAction, handleActions } from 'redux-actions';\r\n\r\nconst CREATE = 'todoItem/CREATE';\r\nconst UPDATE = 'todoItem/UPDATE';\r\nconst REMOVE = 'todoItem/REMOVE';\r\nconst TOGGLE = 'todoItem/TOGGLE';\r\nconst RELOAD = 'todoItem/RELOAD';\r\nconst LOAD_DATA = 'todoItem/LOAD_DATA';\r\n\r\n/**\r\n * TodoItem Class\r\n *  {\r\n *   id: string,\r\n *   endDate: string,\r\n *   title: string,\r\n *   contents: string,\r\n *   priority: number,\r\n *   isComplete : boolean,\r\n *  }\r\n **/\r\n\r\nexport const create = createAction(CREATE); // Map(todoItem:TodoItem:Immutable)\r\nexport const update = createAction(UPDATE); // {id:string, todoItem:TodoItem:Immutable}\r\nexport const remove = createAction(REMOVE); // id:string\r\nexport const toggle = createAction(TOGGLE); // id:string\r\nexport const reload = createAction(RELOAD); // List[TodoItem:Immutable]\r\nexport const loadData = createAction(LOAD_DATA); // [TodoItem]\r\n\r\nconst initialSate = List([]);\r\n\r\nexport default handleActions(\r\n  {\r\n    [CREATE]: (state, action) => {\r\n      return state\r\n        .map(item => item.set('priority', item.get('priority') + 1))\r\n        .unshift(action.payload);\r\n    },\r\n    [UPDATE]: (state, action) => {\r\n      const findIndex = state.findIndex(\r\n        todoItem => todoItem.get('id') === action.payload.todoItem.get('id'),\r\n      );\r\n\r\n      return state.mergeIn([findIndex], action.payload.todoItem);\r\n    },\r\n    [REMOVE]: (state, action) => {\r\n      const findIndex = state.findIndex(\r\n        todoItem => todoItem.get('id') === action.payload,\r\n      );\r\n      return state.delete(findIndex);\r\n    },\r\n    [TOGGLE]: (state, action) => {\r\n      const findIndex = state.findIndex(\r\n        todoItem => todoItem.get('id') === action.payload,\r\n      );\r\n      return state.setIn(\r\n        [findIndex, 'isComplete'],\r\n        !state.getIn([findIndex, 'isComplete']),\r\n      );\r\n    },\r\n    [RELOAD]: (state, action) => {\r\n      return action.payload;\r\n    },\r\n    [LOAD_DATA]: (state, action) => {\r\n      return fromJS(action.payload);\r\n    },\r\n  },\r\n  initialSate,\r\n);\r\n","import { Map } from 'immutable';\r\nimport { createAction, handleActions } from 'redux-actions';\r\n\r\nconst SET_MODAL = 'modal/SET_MODAL';\r\nconst SET_MODE = 'modal/SET_MODE';\r\n\r\nexport const setModal = createAction(SET_MODAL); // {key:string, value:string}\r\nexport const setMode = createAction(SET_MODE); // {mode:string, modal:TodoItem}\r\n\r\nconst initialSate = Map({\r\n  modal: Map({}),\r\n  mode: '',\r\n});\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET_MODAL]: (state, action) => {\r\n      return state.setIn(['modal', action.payload.key], action.payload.value);\r\n    },\r\n    [SET_MODE]: (state, action) => {\r\n      if (\r\n        action.payload.mode === 'create' ||\r\n        action.payload.mode === 'change'\r\n      ) {\r\n        return state\r\n          .set('mode', action.payload.mode)\r\n          .set('modal', action.payload.modal);\r\n      }\r\n\r\n      return state.set('mode', action.payload.mode);\r\n    },\r\n  },\r\n  initialSate,\r\n);\r\n","import React from 'react';\r\nimport * as styles from '../styles/button.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Button = ({ children, ...rest }) => {\r\n  return (\r\n    <div className={cx(rest.className)} onClick={rest.onClick}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Submit = ({ children, ...rest }) => {\r\n  return (\r\n    <div className={cx('submit')}>\r\n      <input\r\n        type=\"submit\"\r\n        value={children}\r\n        onClick={rest.onClick}\r\n        autoComplete={'off'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FloatingButton = ({ children, ...rest }) => {\r\n  return (\r\n    <div className={cx(['floating', 'circle'])} onClick={rest.onClick}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const HideButton = ({ children, ...rest }) => {\r\n  return <div className={cx(rest.className)}>{children}</div>;\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport classNames from 'classnames/bind';\r\nimport * as styles from '../styles/modal.module.scss';\r\nimport Button, { Submit } from '../components/Button';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass TodoItemModal extends Component {\r\n  onSubmit = e => {\r\n    const { onSubmit } = this.props;\r\n    e.preventDefault();\r\n    onSubmit();\r\n  };\r\n\r\n  onChange = {\r\n    default: e => {\r\n      const { onChange } = this.props;\r\n      const { value, name } = e.target;\r\n      onChange(name, value);\r\n    },\r\n    endDate: (selectedDay, modifiers, dayPickerInput) => {\r\n      const { onChange } = this.props;\r\n      const date = selectedDay.toISOString().slice(0, 10);\r\n      const input = dayPickerInput.getInput();\r\n\r\n      input.value = date;\r\n\r\n      onChange('endDate', date);\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const { onSubmit, onChange } = this;\r\n    const { onHide, modal, mode } = this.props;\r\n\r\n    return (\r\n      <div className={cx('wrapper')}>\r\n        <div className={cx('box')}>\r\n          <form onSubmit={onSubmit}>\r\n            <div className={cx('header')}>\r\n              {mode === 'create' ? '등록' : '수정'}\r\n              <Button\r\n                className={['wrapper', 'right', 'close']}\r\n                onClick={onHide}\r\n              >\r\n                <MdClose />\r\n              </Button>\r\n            </div>\r\n            <div className={cx('contents')}>\r\n              <input\r\n                placeholder=\"제목*\"\r\n                name=\"title\"\r\n                defaultValue={modal.get('title')}\r\n                onChange={onChange.default}\r\n                autoComplete={'off'}\r\n                required\r\n              />\r\n              <input\r\n                name=\"contents\"\r\n                placeholder=\"내용*\"\r\n                defaultValue={modal.get('contents')}\r\n                onChange={onChange.default}\r\n                autoComplete={'off'}\r\n                required\r\n              />\r\n              <DayPickerInput\r\n                placeholder={'종료 날짜(YYYY-MM-DD)'}\r\n                value={modal.get('endDate')}\r\n                dayPickerProps={{\r\n                  disabledDays: {\r\n                    before: new Date(),\r\n                  },\r\n                }}\r\n                inputProps={{\r\n                  readOnly: 'readOnly',\r\n                }}\r\n                onDayChange={onChange.endDate}\r\n                autoComplete={'off'}\r\n              />\r\n              <div className={cx('notice')}>\r\n                <span>*가 있는 필드는 필수로 입력해야 합니다.</span>\r\n                {mode === 'create' && (\r\n                  <span>새 항목은 최상위 우선순위로 등록 됩니다.</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Submit>{mode === 'create' ? '등록' : '수정'}</Submit>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemModal;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as todoItemsActions from '../modules/todoItems';\r\nimport * as todoItemModalActions from '../modules/modal';\r\nimport TodoItemModal from '../components/TodoItemModal';\r\n\r\nclass ModalContainer extends Component {\r\n  handleSubmit = {\r\n    create: () => {\r\n      const { TodoItemsActions, modal } = this.props;\r\n\r\n      TodoItemsActions.create(modal);\r\n      this.handleHide();\r\n    },\r\n    change: () => {\r\n      const { TodoItemsActions, modal } = this.props;\r\n\r\n      TodoItemsActions.update({\r\n        id: modal.get('id'),\r\n        todoItem: modal,\r\n      });\r\n      this.handleHide();\r\n    },\r\n  };\r\n\r\n  handleHide = () => {\r\n    const { TodoItemModalActions } = this.props;\r\n    TodoItemModalActions.setMode('');\r\n  };\r\n\r\n  handleChange = (key, value) => {\r\n    const { TodoItemModalActions } = this.props;\r\n    TodoItemModalActions.setModal({\r\n      key: key,\r\n      value: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { handleChange, handleSubmit, handleHide } = this;\r\n    const { mode, modal } = this.props;\r\n    return (\r\n      <div>\r\n        {(mode === 'create' || mode === 'change') && (\r\n          <TodoItemModal\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit[mode]}\r\n            onHide={handleHide}\r\n            modal={modal}\r\n            mode={mode}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    modal: state.modal.get('modal'),\r\n    mode: state.modal.get('mode'),\r\n  }),\r\n  dispatch => ({\r\n    TodoItemsActions: bindActionCreators(todoItemsActions, dispatch),\r\n    TodoItemModalActions: bindActionCreators(todoItemModalActions, dispatch),\r\n  }),\r\n)(ModalContainer);\r\n","import React, { Component } from 'react';\r\nimport * as styles from '../styles/todoItem.module.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { HideButton } from '../components/Button';\r\n\r\nimport { MdEdit, MdDelete } from 'react-icons/md';\r\nimport { FiSquare, FiCheckSquare } from 'react-icons/fi';\r\nconst cx = classNames.bind(styles);\r\n\r\nclass TodoItem extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      JSON.stringify(nextProps.todoItem.toJS()) !==\r\n      JSON.stringify(this.props.todoItem.toJS())\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { todoItem } = this.props;\r\n    if (\r\n      todoItem.get('endDate') !== '' &&\r\n      !todoItem.get('isComplete') &&\r\n      new Date() > new Date(todoItem.get('endDate') + ' 00:00:00')\r\n    ) {\r\n      this.addMessage(todoItem);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { todoItem: prevTodoItem } = prevProps;\r\n    const { todoItem } = this.props;\r\n    if (prevTodoItem.get('isComplete') && !todoItem.get('isComplete')) {\r\n      this.addMessage(todoItem);\r\n    }\r\n\r\n    if (!prevTodoItem.get('isComplete') && todoItem.get('isComplete')) {\r\n      this.removeMessage(todoItem.get('id'));\r\n    }\r\n  }\r\n\r\n  removeMessage = id => {\r\n    const { toastManager } = this.props;\r\n    toastManager.remove(id);\r\n  };\r\n\r\n  addMessage = item => {\r\n    const { toastManager } = this.props;\r\n    const message = `[${item.get('title')} : \r\n    ${item.get('contents')}]의 마감기한이 지났어요! \r\n    (~${item.get('endDate')})`;\r\n    toastManager.add(message, {\r\n      appearance: 'warning',\r\n      id: item.get('id'),\r\n      autoDismiss: false,\r\n      pauseOnHover: false,\r\n    });\r\n  };\r\n\r\n  onChange = () => {\r\n    const { todoItem, onChange } = this.props;\r\n    onChange(todoItem);\r\n  };\r\n\r\n  onRemove = () => {\r\n    const { todoItem, onRemove } = this.props;\r\n    onRemove(todoItem.get('id'));\r\n  };\r\n\r\n  handleCheck = e => {\r\n    const { onToggle } = this.props;\r\n    const { id } = e.target;\r\n\r\n    onToggle(id);\r\n  };\r\n\r\n  render() {\r\n    const { onChange, onRemove, handleCheck } = this;\r\n    const { todoItem } = this.props;\r\n    return (\r\n      <li>\r\n        <div className={cx('check')}>\r\n          <input\r\n            id={todoItem.get('id')}\r\n            type={'checkbox'}\r\n            onClick={handleCheck}\r\n            defaultChecked={todoItem.get('isComplete')}\r\n          />\r\n          <label htmlFor={todoItem.get('id')}>\r\n            <FiSquare />\r\n            <FiCheckSquare />\r\n          </label>\r\n        </div>\r\n        <div className={cx(['item', { complete: todoItem.get('isComplete') }])}>\r\n          <div className={cx('header')}>\r\n            <div className={cx('title')}>{todoItem.get('title')}</div>\r\n            {todoItem.get('endDate') !== '' && (\r\n              <div className={cx('endDate')}>~{todoItem.get('endDate')}</div>\r\n            )}\r\n          </div>\r\n          <div className={cx('contents')}>{todoItem.get('contents')}</div>\r\n        </div>\r\n        <HideButton className={'hide-right'}>\r\n          <MdEdit onClick={onChange} />\r\n          <MdDelete onClick={onRemove} />\r\n        </HideButton>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport { withToastManager } from 'react-toast-notifications';\r\nimport TodoItem from '../components/TodoItem';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nclass TodoItemList extends Component {\r\n  componentDidMount() {\r\n    const { toastManager } = this.props;\r\n    toastManager.add(\r\n      '우선순위가 높은 순으로 정렬됩니다! 드래그해서 우선순위를 변경할 수 있어요!',\r\n      {\r\n        appearance: 'info',\r\n        autoDismiss: true,\r\n        pauseOnHover: true,\r\n      },\r\n    );\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      JSON.stringify(nextProps.todoItems.toJS()) !==\r\n      JSON.stringify(this.props.todoItems.toJS())\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onRemove,\r\n      onToggle,\r\n      onDragEnd,\r\n      todoItems,\r\n      toastManager,\r\n    } = this.props;\r\n\r\n    const itemList = todoItems.map(item => (\r\n      <Draggable\r\n        key={item.get('id')}\r\n        draggableId={item.get('id')}\r\n        index={item.get('priority')}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <TodoItem\r\n              todoItem={item}\r\n              onChange={onChange}\r\n              onRemove={onRemove}\r\n              onToggle={onToggle}\r\n              toastManager={toastManager}\r\n            />\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    ));\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"todoList\">\r\n          {(provided, snapshot) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              <ul>{itemList}</ul>\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (TodoItemList = withToastManager(TodoItemList));\r\n","import { Map, isImmutable } from 'immutable';\r\nimport shortid from 'shortid';\r\n\r\nconst defaultTodoItem = {\r\n  id: '',\r\n  endDate: '',\r\n  title: '',\r\n  contents: '',\r\n  priority: 0,\r\n  isComplete: false,\r\n};\r\n\r\nclass TodoItem {\r\n  constructor(todoItem = defaultTodoItem) {\r\n    for (let key of Object.keys(defaultTodoItem)) {\r\n      this[key] = todoItem[key] || defaultTodoItem[key];\r\n    }\r\n\r\n    if (this.id === '') {\r\n      this.id = shortid.generate();\r\n    }\r\n  }\r\n\r\n  toImmutable = () => {\r\n    let result = Map();\r\n    for (let key of Object.keys(this)) {\r\n      if (typeof this[key] !== 'function') {\r\n        result = result.set(key, this[key]);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  fromImmutable = todoItem => {\r\n    if (!isImmutable(todoItem)) {\r\n      return this;\r\n    }\r\n\r\n    const keys = todoItem.keys();\r\n    for (let key of keys) {\r\n      this[key] = todoItem.get(key) || defaultTodoItem[key];\r\n    }\r\n  };\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as todoItemsActions from '../modules/todoItems';\r\nimport * as todoItemModalActions from '../modules/modal';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport TodoItemList from '../components/TodoItemList';\r\nimport { FloatingButton } from '../components/Button';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport TodoItem from '../classes/TodoItem';\r\n\r\nclass TodoListContainer extends Component {\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      JSON.stringify(prevProps.todoItems.toJS()) !==\r\n      JSON.stringify(this.props.todoItems.toJS())\r\n    ) {\r\n      localStorage.setItem('todoItems', JSON.stringify(this.props.todoItems));\r\n    }\r\n  }\r\n\r\n  onChange = todoItem => {\r\n    const { TodoItemModalActions } = this.props;\r\n    TodoItemModalActions.setMode({\r\n      mode: 'change',\r\n      modal: todoItem,\r\n    });\r\n  };\r\n\r\n  onCreate = () => {\r\n    const { TodoItemModalActions } = this.props;\r\n    TodoItemModalActions.setMode({\r\n      mode: 'create',\r\n      modal: new TodoItem().toImmutable(),\r\n    });\r\n  };\r\n\r\n  onRemove = id => {\r\n    const { TodoItemsActions } = this.props;\r\n    TodoItemsActions.remove(id);\r\n  };\r\n\r\n  onToggle = id => {\r\n    const { TodoItemsActions } = this.props;\r\n    TodoItemsActions.toggle(id);\r\n  };\r\n\r\n  onDragEnd = result => {\r\n    const { todoItems, TodoItemsActions } = this.props;\r\n    if (todoItems.size <= 1 || result.destination === null) {\r\n      return;\r\n    }\r\n\r\n    if (result.source.index === result.destination.index) {\r\n      return;\r\n    }\r\n\r\n    const findIndex = todoItems.findIndex(\r\n      item => item.get('id') === result.draggableId,\r\n    );\r\n    const deletedList = todoItems.delete(findIndex);\r\n    let idx = 0;\r\n\r\n    TodoItemsActions.reload(\r\n      deletedList\r\n        .insert(result.destination.index, todoItems.get(findIndex))\r\n        .map(item => item.set('priority', idx++)),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { className, todoItems } = this.props;\r\n    const { onChange, onRemove, onToggle, onDragEnd, onCreate } = this;\r\n\r\n    return (\r\n      <div className={className}>\r\n        <ToastProvider>\r\n          <TodoItemList\r\n            todoItems={todoItems}\r\n            onChange={onChange}\r\n            onRemove={onRemove}\r\n            onToggle={onToggle}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        </ToastProvider>\r\n        <FloatingButton onClick={onCreate}>\r\n          <MdAdd />\r\n        </FloatingButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    todoItems: state.todoItems,\r\n  }),\r\n  dispatch => ({\r\n    TodoItemsActions: bindActionCreators(todoItemsActions, dispatch),\r\n    TodoItemModalActions: bindActionCreators(todoItemModalActions, dispatch),\r\n  }),\r\n)(TodoListContainer);\r\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport ModalContainer from './containers/ModalContainer';\nimport TodoListContainer from './containers/TodoListContainer';\nimport classNames from 'classnames/bind';\nimport * as styles from './styles/layout.module.scss';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as todoItemsActions from './modules/todoItems';\n\nconst cx = classNames.bind(styles);\n\nclass App extends Component {\n  componentDidMount() {\n    const todoItems = localStorage.getItem('todoItems');\n    if (todoItems !== null && typeof todoItems !== 'undefined') {\n      const { TodoItemsActions } = this.props;\n      TodoItemsActions.loadData(JSON.parse(todoItems));\n    }\n  }\n  render() {\n    return (\n      <div className={cx('wrapper')}>\n        <div className={cx('vl')} />\n        <div className={cx(['vl', 'right'])} />\n        <Header className={cx('header')}>Todo List</Header>\n        <TodoListContainer className={cx('content')} />\n        <ModalContainer />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  dispatch => ({\n    TodoItemsActions: bindActionCreators(todoItemsActions, dispatch),\n  }),\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nimport todoItems from './todoItems';\r\nimport modal from './modal';\r\n\r\nexport default combineReducers({\r\n  todoItems,\r\n  modal,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore } from \"redux\";\nimport reducers from \"./modules\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"modal_wrapper__EtN-Z\",\"box\":\"modal_box__rmIsk\",\"header\":\"modal_header__2C829\",\"contents\":\"modal_contents__70ius\",\"notice\":\"modal_notice__3y2KV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"button_wrapper__2J-QX\",\"right\":\"button_right__yZNcV\",\"close\":\"button_close__2wo-3\",\"submit\":\"button_submit__ISoXi\",\"floating\":\"button_floating__3gBVq\",\"circle\":\"button_circle__1-FQA\",\"hide-right\":\"button_hide-right__1peOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"todoItem_item__FjYyp\",\"header\":\"todoItem_header__1WSvC\",\"title\":\"todoItem_title__1yClB\",\"endDate\":\"todoItem_endDate__10mVw\",\"contents\":\"todoItem_contents__Yo84F\",\"complete\":\"todoItem_complete__qhjf3\",\"check\":\"todoItem_check__wzFUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"layout_root__2I9W4\",\"wrapper\":\"layout_wrapper__2Th_W\",\"header\":\"layout_header__3b2ai\",\"content\":\"layout_content__1dRdc\",\"vl\":\"layout_vl__CdKzr\",\"right\":\"layout_right__3_WpY\"};"],"sourceRoot":""}